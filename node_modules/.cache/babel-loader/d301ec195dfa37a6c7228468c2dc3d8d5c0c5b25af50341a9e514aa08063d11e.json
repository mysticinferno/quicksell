{"ast":null,"code":"var _jsxFileName = \"/home/inferno/Downloads/QuickSell-Frontend-Assignment-main/src/components/Grid/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport './grid.css';\nimport Column from '../Column/Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid({\n  gridData,\n  grouping,\n  userIdToData\n}) {\n  _s();\n  const keys = useMemo(() => Object.keys(gridData), [gridData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: keys.map(k => /*#__PURE__*/_jsxDEV(Column, {\n      tickets: gridData[k],\n      grouping: grouping,\n      groupBy: k,\n      userIdToData: userIdToData\n    }, k, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(Grid, \"WH5WSUy78WqK55BZ52GHtI1wu7A=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useMemo","Column","jsxDEV","_jsxDEV","Grid","gridData","grouping","userIdToData","_s","keys","Object","className","children","map","k","tickets","groupBy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/inferno/Downloads/QuickSell-Frontend-Assignment-main/src/components/Grid/index.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport './grid.css'\nimport Column from '../Column/Column';\nimport { Ticket, User } from '../../interfaces';\n\nfunction Grid({ gridData, grouping, userIdToData }: { gridData: Record<string, Ticket[]>, grouping: string, userIdToData: Record<string, User> }) {\n    const keys: string[] = useMemo(() => Object.keys(gridData), [gridData]);\n\n    return (\n        <div className='grid'>\n            {keys.map((k: string) => <Column key={k} tickets={gridData[k] as Ticket[]} grouping={grouping} groupBy={k} userIdToData={userIdToData} />)}\n        </div>\n    );\n}\n\nexport default Grid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAiBC,OAAO,QAAQ,OAAO;AACnD,OAAO,YAAY;AACnB,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,SAASC,IAAIA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAA2G,CAAC,EAAE;EAAAC,EAAA;EAC9I,MAAMC,IAAc,GAAGT,OAAO,CAAC,MAAMU,MAAM,CAACD,IAAI,CAACJ,QAAQ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEvE,oBACIF,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBH,IAAI,CAACI,GAAG,CAAEC,CAAS,iBAAKX,OAAA,CAACF,MAAM;MAASc,OAAO,EAAEV,QAAQ,CAACS,CAAC,CAAc;MAACR,QAAQ,EAAEA,QAAS;MAACU,OAAO,EAAEF,CAAE;MAACP,YAAY,EAAEA;IAAa,GAAhGO,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiG,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzI,CAAC;AAEd;AAACZ,EAAA,CARQJ,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAUb,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}